<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <!-- VARIABLES -->
    <variable name="WeatherIconVar">
        <value condition="System.HasAddon(script.image.resource.select) + !String.IsEmpty(Skin.String(weather.icons.path))">$INFO[Skin.String(weather.icons.path),,/]</value>
        <value>resource://resource.images.weathericons.default/</value>
    </variable>
    <variable name="HomeWidgetPosterVar">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="String.IsEqual(listitem.dbtype,genre)">$INFO[ListItem.Label,special://skin/extras/videogenre/,.png]</value>
        <value>$INFO[ListItem.Art(thumb)]</value>
    </variable>
    <variable name="HomeWidgetBannerVar">
        <value condition="!IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="HomeWidgetThumbVar">
        <value condition="!IsEmpty(Listitem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="IsEqual(listitem.dbtype,genre)">$INFO[ListItem.Label,special://skin/extras/videogenre/,.png]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="WideWidgetSingleLabel">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(WideWidgetSingle))">$INFO[Container(211).ListItem.Property(WideWidgetSingle)]</value>
        <value>Disable</value>
    </variable>
    <variable name="WideWidgetLabel">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(WideWidget))">$INFO[Container(211).ListItem.Property(WideWidget)]</value>
        <value>Disable</value>
    </variable>
    <variable name="WideWidget2Label">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(WideWidget2))">$INFO[Container(211).ListItem.Property(WideWidget2)]</value>
        <value>Disable</value>
    </variable>
    <variable name="WideWidget3Label">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(WideWidget3))">$INFO[Container(211).ListItem.Property(WideWidget3)]</value>
        <value>Disable</value>
    </variable>
    <variable name="WideWidget4Label">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(WideWidget4))">$INFO[Container(211).ListItem.Property(WideWidget4)]</value>
        <value>Disable</value>
    </variable>
    <variable name="SingleWidgetLabel">
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(SingleWidget))">$INFO[Container(211).ListItem.Property(SingleWidget)]</value>
        <value>Disable</value>
    </variable>
    <variable name="WidgetTitleVar">
        <value condition="Container(9000).ListItem.Property(widgetName)">$INFO[Container(9000).ListItem.Property(widgetName)]</value>
    </variable>
    <variable name="WidgetTitleVar2">
        <value>$INFO[Container(9000).ListItem.Property(widgetName.Widget2)]</value>
    </variable>
    <variable name="WidgetTitleVar3">
        <value>$INFO[Container(9000).ListItem.Property(widgetName.Widget3)]</value>
    </variable>
    <variable name="WidgetTitleVar4">
        <value>$INFO[Container(9000).ListItem.Property(widgetName.Widget4)]</value>
    </variable>
    <variable name="WidgetTitleVarSingle">
        <value>$INFO[Container(9000).ListItem.Property(widgetName.Widgetsingle)]</value>
    </variable>
    <variable name="WidgetDescriptionVar">
        <value condition="!IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
        <value condition="!IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!IsEmpty(ListItem.PictureHeadline)">$INFO[ListItem.PictureHeadline]</value>
        <value>$INFO[ListItem.Plot]</value>
    </variable>
    <variable name="PlayerArtworkVar">
        <value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.thumb))">$INFO[Player.Art(tvshow.thumb)]</value>
        <value>$INFO[Player.Art(thumb)]</value>
    </variable>
    <variable name="VideoInfoPosterVar">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value>$INFO[ListItem.Art(thumb)]</value>
    </variable>
    <variable name="VideoInfoHeadingLabelVar">
        <value condition="!Container.Content(TvShows) + !Container.Content(Episodes)">$INFO[Listitem.Title,, ][COLOR=grey]$INFO[ListItem.Year, (,)][/COLOR]</value>
        <value condition="Container.Content(TvShows) + !Container.Content(Episodes)">$INFO[Listitem.Title,, ][COLOR=grey]$INFO[ListItem.Year, (,)][/COLOR]</value>
        <value condition="!Container.Content(TvShows) + Container.Content(Episodes)">Season $INFO[ListItem.Season] Episode $INFO[ListItem.Episode,,  -  ]$INFO[ListItem.Title]</value>
        <value></value>
    </variable>
    <variable name="VideoInfoSubheadingLabelVar">
        <value condition="!Container.Content(TvShows) + !Container.Content(Episodes)">[I]$INFO[ListItem.Tagline][/I]</value>
        <value condition="Container.Content(TvShows) + !Container.Content(Episodes)">$INFO[ListItem.Genre]</value>
        <value condition="!Container.Content(TvShows) + Container.Content(Episodes)">$INFO[Listitem.TVShowTitle]</value>
        <value></value>
    </variable>
    <variable name="AddonLabel2">
        <value condition="!String.IsEmpty(ListItem.Property(Addon.Status))">$INFO[ListItem.Property(Addon.Status)]</value>
        <value condition="!String.IsEmpty(ListItem.AddonSize)">$INFO[ListItem.AddonSize]</value>
    </variable>
    <variable name="CustomizeHeading">
        <value condition="Skin.String(CustomizeHeading,homemenu)">Customize home menu</value>
        <value condition="Skin.String(CustomizeHeading,specialitemswidget)">Customize "Special Items" widget</value>
        <value>Customize...</value>
    </variable>
    <variable name="MusicInfoHeader">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Artist]</value>
        <value condition="Container.Content(Albums)">$INFO[ListItem.Album]</value>
        <value condition="Container.Content(Songs)">$INFO[ListItem.Title]</value>
    </variable>
    <variable name="MusicInfoLabel">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="Container.Content(Albums)">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="Container.Content(Songs)">$INFO[ListItem.Comment]</value>
    </variable>
    <variable name="MusicInfoListThumb">
        <value condition="Container.Content(Artists) + !String.IsEmpty(Container(50).Listitem.Icon)">$INFO[Container(50).Listitem.Icon]</value>
        <value condition="[Container.Content(Albums) | Container.Content(Songs)] + !String.IsEmpty(Container.Art(artist.thumb))">$INFO[Container.Art(artist.thumb)]</value>
        <value condition="Container.Content(Artists)">DefaultAlbumCover.png</value>
        <value condition="Container.Content(Albums) | Container.Content(Songs)">DefaultArtist.png</value>
    </variable>
    <variable name="MediaInfoOverlayVar">
        <value condition="ListItem.IsCollection">flagging/video/Set.png</value>
        <value condition="!ListItem.IsStereoscopic">$INFO[ListItem.VideoResolution,flagging/lists/,.png]</value>
        <value>flagging/lists/3D.png</value>
    </variable>
    <variable name="BannerThumb">
        <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="PosterThumb">
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="ListItem.IsParentFolder">$INFO[ListItem.Icon]</value>
        <value condition="String.IsEmpty(ListItem.Title) + !Container.Content(genres)">$INFO[ListItem.Icon]</value>
        <value condition="Container.Content(genres) + !ListItem.IsParentFolder">$INFO[ListItem.Label,special://skin/extras/videogenre/,.png]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="ThumbThumb">
        <value condition="String.IsEmpty(ListItem.Title)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="MusicInfoPanelLabel">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Label]</value>
        <value>$INFO[ListItem.TrackNumber,([COLOR=selected][B],[/B][/COLOR]) - ]$INFO[ListItem.Label]</value>
    </variable>
    <variable name="PlayList">
        <value condition="!String.IsEqual(Playlist.Length(video),0)">ActivateWindow(videoplaylist)</value>
        <value>ActivateWindow(musicplaylist)</value>
    </variable>
    <variable name="SelectBack">
        <value condition="![Window.IsVisible(FullscreenVideo) | Window.IsVisible(Visualisation)]">DialogBack.png</value>
        <value>DialogBack2.png</value>
    </variable>
    <variable name="typehackflagging">
        <value condition="[String.Contains(ListItem.FilenameAndPath,bluray) | String.Contains(ListItem.FilenameAndPath,bdrip) | String.Contains(ListItem.FilenameAndPath,brrip) | String.Contains(ListItem.FilenameAndPath,bd25) | String.Contains(ListItem.FilenameAndPath,bd50)]">bluray</value>
        <value condition="String.Contains(ListItem.FilenameAndPath,hddvd)">hddvd</value>
        <value condition="String.Contains(ListItem.FilenameAndPath,dvd)">dvd</value>
        <value condition="[String.Contains(ListItem.FilenameAndPath,pdtv) | String.Contains(ListItem.FilenameAndPath,hdtv) | String.Contains(ListItem.FilenameAndPath,dsr)]">TV</value>
        <value condition="String.Contains(ListItem.FilenameAndPath,vhs)">vhs</value>
    </variable>
    <variable name="rating">
        <value condition="String.Contains(listitem.mpaa,Rated G)">mpaa_general</value>
        <value condition="String.Contains(listitem.mpaa,Rated PG-13)">mpaa_pg13</value>
        <value condition="String.Contains(listitem.mpaa,Rated PG)">mpaa_pg</value>
        <value condition="String.Contains(Listitem.mpaa,Rated R)">mpaa_restricted</value>
        <value condition="String.Contains(Listitem.mpaa,Rated NC)">mpaa_nc17</value>
        <value condition="String.Contains(Listitem.mpaa,Not Rated)">mpaa_notrated</value>
    </variable>
    <variable name="videocodec">
        <value condition="[String.StartsWith(ListItem.VideoCodec,div) | String.IsEqual(ListItem.VideoCodec,dx50)]">divx</value>
        <value>$INFO[ListItem.VideoCodec]</value>
    </variable>
    <variable name="SeekLabel">
        <value condition="Player.IsTempo + String.StartsWith(Player.PlaySpeed,0.)">$LOCALIZE[31045]</value>
        <value condition="Player.IsTempo + String.StartsWith(Player.PlaySpeed,1.)">$LOCALIZE[31044]</value>
        <value condition="Player.Playing + !Player.Seeking + !Player.DisplayAfterSeek">$LOCALIZE[31042]</value>
        <value condition="[Player.Paused + !Player.Caching] + !Player.Seeking">$LOCALIZE[31043]</value>
        <value condition="[Player.Paused + Player.Caching] + !Player.Seeking">$LOCALIZE[15107] $INFO[Player.CacheLevel]%</value>
        <value condition="!String.IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">$LOCALIZE[31046][COLOR=grey] $INFO[Player.SeekStepSize][/COLOR]</value>
        <value condition="Player.DisplayAfterSeek + ![player.forwarding | player.rewinding]">$LOCALIZE[31046][COLOR=grey] $INFO[Player.SeekOffset][/COLOR]</value>
        <value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[31046]</value>
        <value condition="Player.Forwarding">$LOCALIZE[31044]</value>
        <value condition="Player.Rewinding">$LOCALIZE[31045]</value>
    </variable>
    <variable name="SelectLabel">
        <value condition="Control.IsVisible(3)">([COLOR=blue]$INFO[Container(3).NumItems][/COLOR]) $LOCALIZE[31025] - $LOCALIZE[31024] ([COLOR=blue]$INFO[Container(3).CurrentPage]/$INFO[Container(3).NumPages][/COLOR])</value>
        <value condition="Control.IsVisible(6)">([COLOR=blue]$INFO[Container(6).NumItems][/COLOR]) $LOCALIZE[31025] - $LOCALIZE[31024] ([COLOR=blue]$INFO[Container(6).CurrentPage]/$INFO[Container(6).NumPages][/COLOR])</value>
    </variable>
    <variable name="PlayerControlsRepeatImageVar">
        <value condition="Playlist.IsRepeatOne + Control.HasFocus(704)">OSDRepeatOneFO.png</value>
        <value condition="Playlist.IsRepeat + Control.HasFocus(704)">OSDRepeatAllFO.png</value>
        <value condition="Control.HasFocus(704)">OSDRepeatFO.png</value>
        <value condition="Playlist.IsRepeatOne">OSDRepeatOneNF.png</value>
        <value condition="Playlist.IsRepeat">OSDRepeatAllNF.png</value>
        <value>OSDRepeatNF.png</value>
    </variable>
    <variable name="PVRChannelMgrHeader">
        <value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
        <value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
    </variable>
    <variable name="PVRTimerIcon">
        <value condition="ListItem.IsRecording">PVR-IsRecording.png</value>
        <value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">PVR-HasTimerScheduleError.png</value>
        <value condition="ListItem.HasTimer + ListItem.TimerHasError">PVR-HasTimerError.png</value>
        <value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">PVR-HasTimerScheduleConflict.png</value>
        <value condition="ListItem.HasTimer + ListItem.TimerHasConflict">PVR-HasTimerConflict.png</value>
        <value condition="ListItem.HasRecording">PVR-HasRecording.png</value>
        <value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">PVR-HasTimerScheduleDisabled.png</value>
        <value condition="ListItem.HasTimer + !ListItem.TimerIsActive">PVR-HasTimerDisabled.png</value>
        <value condition="ListItem.HasTimerSchedule">PVR-HasTimerSchedule.png</value>
        <value condition="ListItem.HasTimer">PVR-HasTimer.png</value>
    </variable>
    <variable name="PVRTimerLabel">
        <value condition="ListItem.IsRecording">$LOCALIZE[19043]</value>
        <value condition="ListItem.HasTimer + !ListItem.TimerIsActive">$LOCALIZE[19057]</value>
        <value condition="ListItem.HasTimer">$LOCALIZE[31510]</value>
    </variable>
    <variable name="VideoOsdInfoButtonListType">
        <value condition="VideoPlayer.Content(Movies)">movie</value>
        <value condition="VideoPlayer.Content(Episodes)">episode</value>
    </variable>
    <variable name="MaxMediaWidgetVar">
        <value condition="Skin.String(WidgetLimit)">$INFO[Skin.String(WidgetLimit),, items]</value>
        <value>No limit</value>
    </variable>
    <variable name="ColorHighlightVar">
        <value condition="!IsEmpty(Skin.String(highlightcolor.name))">$INFO[Skin.String(highlightcolor.name)]</value>
        <value>ffaf2820</value>
    </variable>
    <variable name="GradientColorHighlightVar">
        <value condition="!IsEmpty(Skin.String(gradientcolor.name))">$INFO[Skin.String(gradientcolor.name)]</value>
        <value>ffeded31</value>
    </variable>
    <variable name="WidgetScreenVar">
        <value condition="Skin.String(ScreenWidgetTimer)">$INFO[Skin.String(ScreenWidgetTimer),, seconds]</value>
        <value>30 seconds</value>
    </variable>
    <variable name="Fanart_Opacity">
        <value condition="String.IsEmpty(Skin.String(Fanart.label)) + String.IsEqual(Skin.String(Fanart.label),Default)">FFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),0)">00FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),5)">0DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),10)">1AFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),15)">26FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),20)">33FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),25)">40FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),30)">4DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),35)">59FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),40)">66FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),45)">73FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),50)">80FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),55)">8CFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),60)">99FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),65)">A6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),70)">B3FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),75)">BFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),80)">CCFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),85)">D9FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),90)">E6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),95)">F2FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(FanartOpacity.label),100)">FFFFFFFF</value>
        <value>FFFFFFFF</value>
    </variable>
    <variable name="Label_SkinSetting_FanartOpacity">
        <value condition="!String.IsEmpty(Skin.String(FanartOpacity.label))">$INFO[Skin.String(FanartOpacity.label)] %</value>
        <value>$LOCALIZE[15109] - 100 %</value>
    </variable>
    <variable name="ContentPanel_Opacity">
        <value condition="String.IsEmpty(Skin.String(ContentPanelOpacity.label)) + String.IsEqual(Skin.String(ContentPanelOpacity.label),Default)">FFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),0)">00FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),5)">0DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),10)">1AFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),15)">26FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),20)">33FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),25)">40FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),30)">4DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),35)">59FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),40)">66FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),45)">73FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),50)">80FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),55)">8CFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),60)">99FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),65)">A6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),70)">B3FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),75)">BFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),80)">CCFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),85)">D9FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),90)">E6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),95)">F2FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),100)">FFFFFFFF</value>
        <value>FFFFFFFF</value>
    </variable>
    <variable name="Label_SkinSetting_ContentPanel_Opacity">
        <value condition="!String.IsEmpty(Skin.String(ContentPanelOpacity.label))">$INFO[Skin.String(ContentPanelOpacity.label)] %</value>
        <value>$LOCALIZE[15109] - 100 %</value>
    </variable>
    <variable name="WidgetBackground_Opacity">
        <value condition="String.IsEmpty(Skin.String(WidgetBackgroundOpacity.label)) + String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),Default)">40FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),0)">00FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),5)">0DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),10)">1AFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),15)">26FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),20)">33FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),25)">40FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),30)">4DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),35)">59FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),40)">66FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),45)">73FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),50)">80FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),55)">8CFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),60)">99FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),65)">A6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),70)">B3FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),75)">BFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),80)">CCFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),85)">D9FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),90)">E6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),95)">F2FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(WidgetBackgroundOpacity.label),100)">FFFFFFFF</value>
        <value>40FFFFFF</value>
    </variable>
    <variable name="Label_SkinSetting_WidgetBackground_Opacity">
        <value condition="!String.IsEmpty(Skin.String(WidgetBackgroundOpacity.label))">$INFO[Skin.String(WidgetBackgroundOpacity.label)] %</value>
        <value>$LOCALIZE[15109] - 25 %</value>
    </variable>
    <variable name="DefaultBackground_Opacity">
        <value condition="String.IsEmpty(Skin.String(DefaultBackgroundOpacity.label)) + String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),Default)">FFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),0)">00FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),5)">0DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),10)">1AFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),15)">26FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),20)">33FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),25)">40FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),30)">4DFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),35)">59FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),40)">66FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),45)">73FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),50)">80FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),55)">8CFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),60)">99FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),65)">A6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),70)">B3FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),75)">BFFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),80)">CCFFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),85)">D9FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),90)">E6FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),95)">F2FFFFFF</value>
        <value condition="String.IsEqual(Skin.String(DefaultBackgroundOpacity.label),100)">FFFFFFFF</value>
        <value>FFFFFFFF</value>
    </variable>
    <variable name="Label_SkinSetting_DefaultBackgroundOpacity_Opacity">
        <value condition="!String.IsEmpty(Skin.String(DefaultBackgroundOpacity.label))">$INFO[Skin.String(DefaultBackgroundOpacity.label)] %</value>
        <value>$LOCALIZE[15109] - 100 %</value>
    </variable>
    <variable name="SkinSettingDescriptionVar">
        <value>[B]SKIN SETTINGS[/B]

Configure all settings related to the display and behaviour of the skin here, including home screen menu and widget options, colour options and background options</value>
    </variable>
    
    <!--variable name="ColorBackgroundVar">
		<value condition="!String.IsEmpty(Skin.String(backgroundcolor.name))">$INFO[Skin.String(backgroundcolor.name)]</value>
		<value>background</value>
	</variable>
	<variable name="ColorDialogVar">
		<value condition="!String.IsEmpty(Skin.String(dialogcolor.name))">$INFO[Skin.String(dialogcolor.name)]</value>
		<value>dialog</value>
	</variable>
	<variable name="ColorTextVar">
		<value condition="!String.IsEmpty(Skin.String(textcolor.name))">$INFO[Skin.String(textcolor.name)]</value>
		<value>maintext</value>
	</variable>
	<variable name="ColorDisabledVar">
		<value condition="!String.IsEmpty(Skin.String(disabledcolor.name))">$INFO[Skin.String(disabledcolor.name)]</value>
		<value>disabled</value>
	</variable>
	<variable name="ColorMenuVar">
		<value condition="!String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
		<value>maintext</value>
	</variable>
	<variable name="ColorRecordingVar">
		<value condition="Player.Recording">ffff0000</value>
		<value condition="!Player.Recording + !String.IsEmpty(Skin.String(menucolor.name))">$INFO[Skin.String(menucolor.name)]</value>
		<value>maintext</value>
	</variable-->
</includes>
