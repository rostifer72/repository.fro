<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include file="Defaults.xml" />
    <include file="ViewsVideoLibrary.xml" />
    <include file="ViewsMusicLibrary.xml" />
    <include file="ViewsFileMode.xml" />
    <include file="ViewsPictures.xml" />
    <include file="ViewsAddonBrowser.xml" />
    <include file="ViewsLiveTV.xml" />
    <include file="ViewsPVRGuide.xml" />
    <include file="ViewsWeather.xml" />
    <include file="IncludesCodecFlagging.xml" />
    <include file="IncludesHomeMenus.xml" />
    <include file="IncludesWidgetContent.xml" />
    <include file="IncludesPVR.xml" />
    <include file="IncludesBackgroundBuilding.xml" />
    <include file="ViewsTitles.xml" />
    <include file="ViewsSeasons.xml" />
    <include file="ViewsEpisodes.xml" />
    <include file="script-skinshortcuts-includes.xml" />
    <include file="variables.xml" />
    <!-- CONSTANTS -->
    <constant name="FanartCrossfadeTime">500</constant>
    <constant name="IconCrossfadeTime">400</constant>
    <constant name="DepthDialog">0.50</constant>
    <constant name="DepthDialog+">0.52</constant>
    <constant name="DepthDialog-">0.48</constant>
    <constant name="DepthMax">0.54</constant>
    <constant name="DepthOSD">0.40</constant>
    <constant name="DepthOSD+">0.44</constant>
    <constant name="DepthOSD-">0.36</constant>
    <constant name="DepthOSDPopout">0.48</constant>
    <constant name="DepthContent">0</constant>
    <constant name="DepthContent+">0.08</constant>
    <constant name="DepthContent-">-0.08</constant>
    <constant name="DepthContentPopout">0.15</constant>
    <constant name="DepthMenu">0.08</constant>
    <constant name="DepthMenu+">0.14</constant>
    <constant name="DepthMenu-">0.00</constant>
    <constant name="DepthHeader">0.08</constant>
    <constant name="DepthFooter">0.08</constant>
    <constant name="DepthBackground">-0.80</constant>
    <constant name="DepthFloor">-0.20</constant>
    <constant name="DepthSideBlade">0.15</constant>
    <!-- EXPRESSION -->
    
    <!-- INCLUDES -->
    <include name="VideoOsdInfoButtonList">
        <control type="list" id="43260">
            <left>0</left>
            <top>0</top>
            <width>1</width>
            <height>1</height>
            <itemlayout />
            <focusedlayout />
            <content>plugin://service.library.data.provider?type=$VAR[VideoOsdInfoButtonListType]&amp;dbid=$INFO[VideoPlayer.DBID]&amp;dbtype=$VAR[VideoOsdInfoButtonListType]</content>
        </control>
    </include>
    <include name="MusicInfoPanel">
        <control type="panel" id="50">
            <left>$PARAM[panel-left]</left>
            <top>780</top>
            <width>$PARAM[panel-width]</width>
            <height>180</height>
            <onleft>50</onleft>
            <onright>50</onright>
            <onup>49</onup>
            <ondown>9000</ondown>
            <viewtype label="">list</viewtype>
            <pagecontrol>61</pagecontrol>
            <scrolltime>200</scrolltime>
            <orientation>vertical</orientation>
            <itemlayout height="60" width="$PARAM[item-width]">
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <width>$PARAM[item-width]</width>
                    <height>60</height>
                    <texture border="8">button-nofocus.png</texture>
                </control>
                <control type="label">
                    <left>15</left>
                    <top>0</top>
                    <width>$PARAM[label-width]</width>
                    <height>60</height>
                    <font>font12</font>
                    <align>left</align>
                    <aligny>center</aligny>
                    <selectedcolor>selected</selectedcolor>
                    <label>$VAR[MusicInfoPanelLabel]</label>
                </control>
                <control type="label">
                    <left>15</left>
                    <top>0</top>
                    <width>$PARAM[label-width]</width>
                    <height>60</height>
                    <font>font12</font>
                    <align>right</align>
                    <aligny>center</aligny>
                    <selectedcolor>selected</selectedcolor>
                    <label>$INFO[ListItem.Duration]</label>
                </control>
            </itemlayout>
            <focusedlayout height="60" width="$PARAM[item-width]">
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <width>$PARAM[item-width]</width>
                    <height>60</height>
                    <visible>!Control.HasFocus(50)</visible>
                    <texture border="8">button-nofocus.png</texture>
                </control>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <width>$PARAM[item-width]</width>
                    <height>60</height>
                    <visible>Control.HasFocus(50)</visible>
                    <texture colordiffuse="$VAR[ColorHighlightVar]" border="8">button-focus2.png</texture>
                </control>
                <control type="label">
                    <left>15</left>
                    <top>0</top>
                    <width>$PARAM[label-width]</width>
                    <height>60</height>
                    <font>font12</font>
                    <align>left</align>
                    <aligny>center</aligny>
                    <selectedcolor>selected</selectedcolor>
                    <label>$VAR[MusicInfoPanelLabel]</label>
                </control>
                <control type="label">
                    <left>15</left>
                    <top>0</top>
                    <width>$PARAM[label-width]</width>
                    <height>60</height>
                    <font>font12</font>
                    <align>right</align>
                    <aligny>center</aligny>
                    <selectedcolor>selected</selectedcolor>
                    <label>$INFO[ListItem.Duration]</label>
                </control>
            </focusedlayout>
        </control>
    </include>
    <include name="DialogBackgroundCommons">
        <control type="image">
            <description>background image</description>
            <left>0</left>
            <top>0</top>
            <width>$PARAM[DialogBackgroundWidth]</width>
            <height>$PARAM[DialogBackgroundHeight]</height>
            <texture border="60">$VAR[SelectBack]</texture>
        </control>
        <control type="image">
            <description>Dialog Header image</description>
            <left>60</left>
            <top>24</top>
            <width>$PARAM[DialogHeaderWidth]</width>
            <height>60</height>
            <texture>dialogheader.png</texture>
        </control>
        <control type="label" id="$PARAM[DialogHeaderId]">
            <description>header label</description>
            <left>60</left>
            <top>30</top>
            <width>$PARAM[DialogHeaderWidth]</width>
            <height>45</height>
            <font>font13_title</font>
            <label>$PARAM[DialogHeaderLabel]</label>
            <align>center</align>
            <aligny>center</aligny>
            <textcolor>selected</textcolor>
            <shadowcolor>black</shadowcolor>
        </control>
        <control type="button">
            <description>Close Window button</description>
            <left>$PARAM[CloseButtonLeft]</left>
            <top>22</top>
            <width>96</width>
            <height>48</height>
            <label></label>
            <font></font>
            <onclick>PreviousMenu</onclick>
            <texturefocus>DialogCloseButton-focus.png</texturefocus>
            <texturenofocus>DialogCloseButton.png</texturenofocus>
            <onleft>$PARAM[CloseButtonNav]</onleft>
            <onright>$PARAM[CloseButtonNav]</onright>
            <onup>$PARAM[CloseButtonNav]</onup>
            <ondown>$PARAM[CloseButtonNav]</ondown>
            <visible>system.getbool(input.enablemouse)</visible>
        </control>
    </include>
    <include name="BehindDialogFadeOut">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <width>1920</width>
            <height>1080</height>
            <texture>black-back.png</texture>
            <animation effect="fade" time="300">Visible</animation>
            <animation effect="fade" time="150">Hidden</animation>
            <visible>Window.IsActive(MovieInformation) | Window.IsActive(MusicInformation) | Window.IsActive(SongInformation) | Window.IsActive(FileBrowser) | Window.IsActive(TextViewer) | Window.IsActive(AddonSettings) | Window.IsActive(ContentSettings) | Window.IsActive(SelectDialog) | Window.IsActive(MediaSource) | Window.IsActive(PictureInfo) | Window.IsActive(PlayerControls) | Window.IsActive(VirtualKeyboard) | Window.IsActive(NumericInput) | Window.IsActive(ProfileSettings) | Window.IsActive(LockSettings) | Window.IsActive(SmartPlaylistEditor) | Window.IsActive(SmartPlaylistRule) | Window.IsActive(script-RSS_Editor-rssEditor.xml) | Window.IsActive(script-RSS_Editor-setEditor.xml) | Window.IsActive(AddonInformation) | Window.IsActive(PeripheralSettings) | Window.IsActive(script-cu-lrclyrics-main.xml) | Window.IsActive(MediaFilter) | Window.IsActive(Favourites) | Window.IsActive(script-globalsearch-infodialog.xml) | Window.IsActive(Contextmenu)</visible>
        </control>
    </include>
    <include name="WindowTitleCommons">
        <left>0</left>
        <top>0</top>
        <width min="0" max="1200">auto</width>
        <height>45</height>
        <font>font14</font>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <scroll>false</scroll>
        <align>left</align>
        <aligny>center</aligny>
    </include>
    <include name="ButtonCommonValues">
        <height>60</height>
        <width>375</width>
        <textoffsetx>15</textoffsetx>
        <textwidth>300</textwidth>
        <aligny>center</aligny>
        <font>font13</font>
        <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="8">button-focus.png</texturefocus>
        <texturenofocus></texturenofocus>
        <pulseonselect>false</pulseonselect>
    </include>
    <include name="ButtonMediaSubCommonValues">
        <height>60</height>
        <width>332</width>
        <textoffsetx>30</textoffsetx>
        <textwidth>292</textwidth>
        <aligny>center</aligny>
        <font>font12_title</font>
        <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="8">button-focus.png</texturefocus>
        <texturenofocus border="8">button-nofocus.png</texturenofocus>
        <pulseonselect>false</pulseonselect>
    </include>
    <include name="ButtonHomeSubCommonValues">
        <height>52</height>
        <width>270</width>
        <textwidth>292</textwidth>
        <align>center</align>
        <aligny>center</aligny>
        <font>font12</font>
        <textcolor>grey2</textcolor>
        <focusedcolor>white</focusedcolor>
        <scroll>true</scroll>
        <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="8">HomeSubFO.png</texturefocus>
        <texturenofocus>HomeSubNF.png</texturenofocus>
        <pulseonselect>false</pulseonselect>
    </include>
    <include name="ButtonInfoDialogsCommonValues">
        <height>60</height>
        <width>255</width>
        <textoffsetx>8</textoffsetx>
        <align>center</align>
        <aligny>center</aligny>
        <font>font12_title</font>
        <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="6">button-focus.png</texturefocus>
        <texturenofocus border="6">button-nofocus.png</texturenofocus>
        <pulseonselect>false</pulseonselect>
    </include>
    <include name="SideBladeLeft">
        <depth>DepthSideBlade</depth>
        <animation effect="slide" start="0,0" end="375,0" time="300" tween="quadratic" easing="out" condition="[ControlGroup(9000).HasFocus | Control.HasFocus(9001) | Control.HasFocus(8999)] + ![Window.IsActive(PVRGuideInfo) | Window.IsActive(PVRRadioRDSInfo)]">Conditional</animation>
        <animation effect="slide" start="0,0" end="-450,0" time="300" tween="quadratic" easing="out" condition="ControlGroup(9000).HasFocus | Control.HasFocus(9001)">WindowClose</animation>
        <animation effect="slide" start="0,0" end="-75,0" time="225" tween="quadratic" easing="out" condition="![ControlGroup(9000).HasFocus | Control.HasFocus(9001)]">WindowClose</animation>
        <animation effect="slide" start="-75,0" end="0,0" time="225" tween="quadratic" easing="out">WindowOpen</animation>
        <control type="button" id="8999">
            <description>Fake button for mouse control</description>
            <left>0</left>
            <top>0</top>
            <width>375</width>
            <height>1080</height>
            <label></label>
            <font></font>
            <texturenofocus></texturenofocus>
            <texturefocus></texturefocus>
            <visible>true</visible>
        </control>
        <control type="button" id="9001">
            <left>375</left>
            <top>390</top>
            <width>63</width>
            <height>192</height>
            <font></font>
            <texturefocus colordiffuse="$VAR[ColorHighlightVar]">HasSub.png</texturefocus>
            <texturenofocus>HasSub.png</texturenofocus>
        </control>
        <control type="image">
            <left>-30</left>
            <top>0</top>
            <width>420</width>
            <height>1080</height>
            <texture border="0,0,15,0">MediaBladeSub.png</texture>
        </control>
        <control type="image">
            <description>LOGO</description>
            <left>22</left>
            <top>0</top>
            <width>330</width>
            <height>120</height>
            <aspectratio>keep</aspectratio>
            <texture>Confluence_Logo.png</texture>
        </control>
    </include>
    <include name="MainWindowMouseButtons">
        <control type="group">
            <left>180r</left>
            <top>82r</top>
            <animation effect="fade" time="200" condition="Window.Previous(Home)">WindowOpen</animation>
            <animation effect="fade" time="200" condition="Window.Next(Home)">WindowClose</animation>
            <visible>system.getbool(input.enablemouse)</visible>
            <control type="button">
                <description>Back push button</description>
                <left>0</left>
                <top>0</top>
                <width>68</width>
                <height>68</height>
                <label>1036</label>
                <font></font>
                <onclick>back</onclick>
                <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="8">floor_buttonFO.png</texturefocus>
                <texturenofocus border="8">floor_button.png</texturenofocus>
                <onleft>50</onleft>
                <onright>50</onright>
                <onup>50</onup>
                <ondown>50</ondown>
            </control>
            <control type="image">
                <description>Back Icon</description>
                <left>8</left>
                <top>8</top>
                <width>52</width>
                <height>52</height>
                <aspectratio>keep</aspectratio>
                <texture>icon_back.png</texture>
            </control>
            <control type="button">
                <description>Home push button</description>
                <left>82</left>
                <top>0</top>
                <width>68</width>
                <height>68</height>
                <label>31003</label>
                <font></font>
                <onclick>ActivateWindow(home)</onclick>
                <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="8">floor_buttonFO.png</texturefocus>
                <texturenofocus border="8">floor_button.png</texturenofocus>
                <onleft>50</onleft>
                <onright>50</onright>
                <onup>50</onup>
                <ondown>50</ondown>
            </control>
            <control type="image">
                <description>Home Icon</description>
                <left>90</left>
                <top>8</top>
                <width>52</width>
                <height>52</height>
                <aspectratio>keep</aspectratio>
                <texture>icon_home.png</texture>
            </control>
        </control>
    </include>
    <include name="CommonNowPlaying">
        <control type="group">
            <visible>Player.HasMedia + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
            <include>VisibleFadeEffect</include>
            <animation effect="fade" time="200" condition="Window.Previous(Home)">WindowOpen</animation>
            <animation effect="fade" time="200" condition="Window.Next(Home)">WindowClose</animation>
            <control type="button">
                <description>push button</description>
                <left>45</left>
                <top>82r</top>
                <width>68</width>
                <height>68</height>
                <label>31003</label>
                <font></font>
                <onclick>ActivateWindow(PlayerControls)</onclick>
                <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="8">floor_buttonFO.png</texturefocus>
                <texturenofocus border="8">floor_button.png</texturenofocus>
                <onleft>50</onleft>
                <onright>50</onright>
                <onup>50</onup>
                <ondown>50</ondown>
            </control>
            <control type="image">
                <description>Player Icon</description>
                <left>52</left>
                <top>75r</top>
                <width>52</width>
                <height>52</height>
                <aspectratio>keep</aspectratio>
                <texture>icon_player.png</texture>
            </control>
            <control type="label">
                <left>128</left>
                <top>80r</top>
                <width>1050</width>
                <height>30</height>
                <label>$INFO[Player.Title] - ([COLOR=$VAR[ColorHighlightVar]]$INFO[Player.Time] / $INFO[Player.Duration,][/COLOR])</label>
                <align>left</align>
                <aligny>center</aligny>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <shadowcolor>black</shadowcolor>
            </control>
            <control type="label">
                <left>128</left>
                <top>48r</top>
                <width>1050</width>
                <height>30</height>
                <label>$INFO[MusicPlayer.Artist]$INFO[MusicPlayer.Album, - ]</label>
                <align>left</align>
                <aligny>center</aligny>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <shadowcolor>black</shadowcolor>
                <visible>Player.HasAudio</visible>
            </control>
            <control type="label">
                <left>128</left>
                <top>45r</top>
                <width>1050</width>
                <height>30</height>
                <label>$INFO[VideoPlayer.Studio]</label>
                <align>left</align>
                <aligny>center</aligny>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <shadowcolor>black</shadowcolor>
                <visible>Player.HasVideo + VideoPlayer.Content(Movies)</visible>
            </control>
            <control type="label">
                <left>128</left>
                <top>45r</top>
                <width>1050</width>
                <height>30</height>
                <label>$INFO[VideoPlayer.TVShowTitle]</label>
                <align>left</align>
                <aligny>center</aligny>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <shadowcolor>black</shadowcolor>
                <visible>Player.HasVideo + VideoPlayer.Content(Episodes)</visible>
            </control>
            <control type="label">
                <left>128</left>
                <top>45r</top>
                <width>1050</width>
                <height>30</height>
                <label>$INFO[VideoPlayer.Artist]</label>
                <align>left</align>
                <aligny>center</aligny>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <shadowcolor>black</shadowcolor>
                <visible>Player.HasVideo + VideoPlayer.Content(MusicVideos)</visible>
            </control>
            <control type="label">
                <left>128</left>
                <top>45r</top>
                <width>1050</width>
                <height>30</height>
                <label>$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.ChannelNumberLabel, - ([COLOR=blue],[/COLOR])]</label>
                <align>left</align>
                <aligny>center</aligny>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <shadowcolor>black</shadowcolor>
                <visible>Player.HasVideo + VideoPlayer.Content(LiveTV)</visible>
            </control>
        </control>
    </include>
    <include name="CommonPageCount">
        <control type="group">
            <include>Window_OpenClose_Animation</include>
            <animation effect="slide" start="0,0" end="-135,0" time="0" condition="system.getbool(input.enablemouse)">Conditional</animation>
            <control type="label">
                <description>Page Count Label</description>
                <right>60</right>
                <top>80r</top>
                <width>750</width>
                <height>30</height>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <scroll>false</scroll>
                <align>right</align>
                <aligny>center</aligny>
                <label>$INFO[Container.NumItems,$LOCALIZE[31025]: ]$INFO[Container.CurrentPage,   - $LOCALIZE[31024] ]$INFO[Container.NumPages,/]</label>
            </control>
            <control type="label">
                <description>Container Duration Label</description>
                <right>60</right>
                <top>48r</top>
                <width>750</width>
                <height>30</height>
                <font>font12</font>
                <textcolor>grey</textcolor>
                <scroll>false</scroll>
                <align>right</align>
                <aligny>center</aligny>
                <label>$INFO[Container.TotalTime,$LOCALIZE[31009]: ]</label>
            </control>
        </control>
    </include>
    <include name="SmallMusicInfo">
        <control type="image">
            <description>gradient</description>
            <left>0</left>
            <top>0</top>
            <width>750</width>
            <height>248</height>
            <colordiffuse>DDFFFFFF</colordiffuse>
            <texture border="30">OverlayDialogBackground.png</texture>
        </control>
        <control type="image">
            <description>Cover image</description>
            <left>30</left>
            <top>26</top>
            <width>195</width>
            <height>195</height>
            <texture>$INFO[MusicPlayer.Cover]</texture>
        </control>
        <control type="label">
            <description>Artist label</description>
            <left>240</left>
            <top>30</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[MusicPlayer.Artist]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12_title</font>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
        </control>
        <control type="fadelabel">
            <description>Title label</description>
            <left>240</left>
            <top>64</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[Player.Title]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font13_title</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <scrollout>false</scrollout>
            <pauseatend>2000</pauseatend>
        </control>
        <control type="label">
            <description>Album Label</description>
            <left>240</left>
            <top>105</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[MusicPlayer.Album]$INFO[musicplayer.discnumber, - $LOCALIZE[427]:]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
        </control>
        <control type="label">
            <description>Time Label</description>
            <left>240</left>
            <top>142</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[MusicPlayer.Time]$INFO[MusicPlayer.Duration, / ]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
        </control>
        <control type="label">
            <description>Next Label</description>
            <left>240</left>
            <top>180</top>
            <height>45</height>
            <width>488</width>
            <label>[COLOR=$VAR[ColorHighlightVar]]$LOCALIZE[19031] :[/COLOR] $INFO[MusicPlayer.offset(1).Title]</label>
            <align>right</align>
            <aligny>center</aligny>
            <font>font12</font>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
        </control>
    </include>
    <include name="SmallVideoInfo">
        <control type="image">
            <description>gradient</description>
            <left>0</left>
            <top>0</top>
            <width>750</width>
            <height>248</height>
            <colordiffuse>DDFFFFFF</colordiffuse>
            <texture border="30">OverlayDialogBackground.png</texture>
        </control>
        <control type="image">
            <description>Cover image</description>
            <left>30</left>
            <top>26</top>
            <width>195</width>
            <height>195</height>
            <aspectratio>keep</aspectratio>
            <texture>$INFO[VideoPlayer.cover]</texture>
        </control>
        <control type="label">
            <description>Studio label</description>
            <left>240</left>
            <top>30</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[VideoPlayer.Studio]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12_title</font>
            <textcolor>grey2</textcolor>
            <shadowcolor>black</shadowcolor>
            <visible>!videoplayer.content(episodes) + !videoplayer.content(musicvideos)</visible>
        </control>
        <control type="label">
            <description>TV Show Title label</description>
            <left>240</left>
            <top>30</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[VideoPlayer.tvshowtitle]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12_title</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <visible>videoplayer.content(episodes)</visible>
        </control>
        <control type="fadelabel">
            <description>Music Video Artist label</description>
            <left>240</left>
            <top>30</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[VideoPlayer.Artist]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12_title</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <visible>videoplayer.content(musicvideos)</visible>
            <scrollout>false</scrollout>
            <pauseatend>2000</pauseatend>
        </control>
        <control type="fadelabel">
            <description>Title label</description>
            <left>240</left>
            <top>64</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[Player.Title]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font13_title</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <scrollout>false</scrollout>
            <pauseatend>2000</pauseatend>
        </control>
        <control type="label">
            <description>Genre label</description>
            <left>240</left>
            <top>105</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[VideoPlayer.Genre]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <visible>!videoplayer.content(episodes) + !videoplayer.content(musicvideos)</visible>
        </control>
        <control type="label">
            <left>240</left>
            <top>105</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[VideoPlayer.Album]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <visible>videoplayer.content(musicvideos)</visible>
        </control>
        <control type="label">
            <description>Season and Episode label</description>
            <left>240</left>
            <top>105</top>
            <height>45</height>
            <width>488</width>
            <label>$LOCALIZE[20373] $INFO[VideoPlayer.Season] - $LOCALIZE[20359] $INFO[VideoPlayer.episode]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <visible>videoplayer.content(episodes)</visible>
        </control>
        <control type="label">
            <description>Time Label</description>
            <left>240</left>
            <top>142</top>
            <height>45</height>
            <width>488</width>
            <label>$INFO[VideoPlayer.Time]$INFO[VideoPlayer.Duration, / ]</label>
            <align>left</align>
            <aligny>center</aligny>
            <font>font12</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
        </control>
    </include>
    <include name="CommonNowPlaying_Controls">
        <control type="label" id="202">
            <width>375</width>
            <height>52</height>
            <font>font12</font>
            <label>31023</label>
            <textcolor>$VAR[ColorHighlightVar]</textcolor>
            <align>center</align>
            <aligny>center</aligny>
            <visible>Player.HasMedia</visible>
            <include>VisibleFadeEffect</include>
        </control>
        <control type="button" id="610">
            <description>Fake Button to fix Player Controls Navigation</description>
            <visible>false</visible>
        </control>
        <control type="group" id="90060">
            <height>68</height>
            <visible>VideoPlayer.Content(LiveTV)</visible>
            <include>VisibleFadeEffect</include>
            <control type="grouplist" id="9006">
                <width>375</width>
                <height>68</height>
                <itemgap>1</itemgap>
                <orientation>horizontal</orientation>
                <onright>50</onright>
                <onback>50</onback>
                <onup>610</onup>
                <ondown>611</ondown>
                <control type="button" id="600">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDChannelUPFO.png</texturefocus>
                    <texturenofocus>OSDChannelUPNF.png</texturenofocus>
                    <onclick>ChannelDown</onclick>
                </control>
                <control type="button" id="601">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDChannelDownFO.png</texturefocus>
                    <texturenofocus>OSDChannelDownNF.png</texturenofocus>
                    <onclick>ChannelUp</onclick>
                </control>
                <control type="button" id="603">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDStopFO.png</texturefocus>
                    <texturenofocus>OSDStopNF.png</texturenofocus>
                    <onclick>down</onclick>
                    <onclick>PlayerControl(Stop)</onclick>
                </control>
                <control type="togglebutton" id="604">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDPauseFO.png</texturefocus>
                    <texturenofocus>OSDPauseNF.png</texturenofocus>
                    <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
                    <alttexturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDPlayFO.png</alttexturefocus>
                    <alttexturenofocus>OSDPlayNF.png</alttexturenofocus>
                    <onclick>PlayerControl(Play)</onclick>
                    <enable>Player.PauseEnabled</enable>
                    <animation effect="fade" start="100" end="30" time="75" condition="!Player.PauseEnabled">Conditional</animation>
                </control>
                <control type="button" id="605">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDRecordOffFO.png</texturefocus>
                    <texturenofocus>OSDRecordOffNF.png</texturenofocus>
                    <onclick>PlayerControl(record)</onclick>
                    <enable>Player.CanRecord</enable>
                    <animation effect="fade" start="100" end="30" time="75" condition="!Player.CanRecord">Conditional</animation>
                </control>
                <control type="button" id="606">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <visible>RDS.HasRadiotextPlus</visible>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDRadioRDSFO.png</texturefocus>
                    <texturenofocus>OSDRadioRDSNF.png</texturenofocus>
                    <onclick>ActivateWindow(PVRRadioRDSInfo)</onclick>
                </control>
                <control type="button" id="622">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <visible>!RDS.HasRadiotextPlus</visible>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDChannelListFO.png</texturefocus>
                    <texturenofocus>OSDChannelListNF.png</texturenofocus>
                    <onclick>ActivateWindow(PVRGuideInfo)</onclick>
                </control>
            </control>
        </control>
        <control type="group" id="90050">
            <visible>Player.HasMedia</visible>
            <visible>!VideoPlayer.Content(LiveTV)</visible>
            <include>VisibleFadeEffect</include>
            <height>68</height>
            <control type="grouplist" id="9005">
                <width>375</width>
                <height>68</height>
                <itemgap>1</itemgap>
                <orientation>horizontal</orientation>
                <onright>50</onright>
                <onback>50</onback>
                <onup>610</onup>
                <ondown>611</ondown>
                <defaultcontrol always="true">603</defaultcontrol>
                <control type="button" id="700">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDPrevTrackFO.png</texturefocus>
                    <texturenofocus>OSDPrevTrackNF.png</texturenofocus>
                    <onclick>PlayerControl(Previous)</onclick>
                </control>
                <control type="button" id="706">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDRewindFO.png</texturefocus>
                    <texturenofocus>OSDRewindNF.png</texturenofocus>
                    <onclick>PlayerControl(Rewind)</onclick>
                    <visible>Window.IsVisible(MusicPlaylist) | Window.IsVisible(VideoPlaylist) | Player.HasVideo</visible>
                </control>
                <control type="togglebutton" id="703">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDPauseFO.png</texturefocus>
                    <texturenofocus>OSDPauseNF.png</texturenofocus>
                    <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
                    <alttexturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDPlayFO.png</alttexturefocus>
                    <alttexturenofocus>OSDPlayNF.png</alttexturenofocus>
                    <onclick>PlayerControl(Play)</onclick>
                </control>
                <control type="button" id="701">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDStopFO.png</texturefocus>
                    <texturenofocus>OSDStopNF.png</texturenofocus>
                    <onclick>down</onclick>
                    <onclick>PlayerControl(Stop)</onclick>
                </control>
                <control type="button" id="707">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDForwardFO.png</texturefocus>
                    <texturenofocus>OSDForwardNF.png</texturenofocus>
                    <onclick>PlayerControl(Forward)</onclick>
                    <visible>Window.IsVisible(MusicPlaylist) | Window.IsVisible(VideoPlaylist) | Player.HasVideo</visible>
                </control>
                <control type="button" id="702">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDNextTrackFO.png</texturefocus>
                    <texturenofocus>OSDNextTrackNF.png</texturenofocus>
                    <onclick>PlayerControl(Next)</onclick>
                </control>
                <control type="group" id="799">
                    <width>58</width>
                    <height>58</height>
                    <control type="button" id="704">
                        <width>58</width>
                        <height>58</height>
                        <label></label>
                        <texturefocus></texturefocus>
                        <texturenofocus></texturenofocus>
                        <onleft>702</onleft>
                        <onright>705</onright>
                        <onclick>PlayerControl(Repeat)</onclick>
                        <visible>!Window.IsVisible(MusicPlaylist) + !Window.IsVisible(VideoPlaylist) + !Player.HasVideo</visible>
                    </control>
                    <control type="image" id="713">
                        <width>58</width>
                        <height>58</height>
                        <texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[PlayerControlsRepeatImageVar]</texture>
                        <visible>!Window.IsVisible(MusicPlaylist) + !Window.IsVisible(VideoPlaylist) + !Player.HasVideo</visible>
                    </control>
                </control>
                <control type="togglebutton" id="705">
                    <width>58</width>
                    <height>58</height>
                    <label></label>
                    <texturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDRandomOffFO.png</texturefocus>
                    <texturenofocus>OSDRandomOffNF.png</texturenofocus>
                    <usealttexture>Playlist.IsRandom</usealttexture>
                    <alttexturefocus colordiffuse="$VAR[ColorHighlightVar]">OSDRandomOnFO.png</alttexturefocus>
                    <alttexturenofocus>OSDRandomOnNF.png</alttexturenofocus>
                    <onclick>PlayerControl(Random)</onclick>
                    <visible>!Window.IsVisible(MusicPlaylist) + !Window.IsVisible(VideoPlaylist) + !Player.HasVideo</visible>
                </control>
            </control>
        </control>
        <control type="radiobutton" id="611">
            <description>Go to fullscreen Playback</description>
            <include>ButtonCommonValues</include>
            <label>31008</label>
            <onclick>fullscreen</onclick>
            <textureradioonfocus>GoFullscreen.png</textureradioonfocus>
            <textureradioonnofocus>GoFullscreen.png</textureradioonnofocus>
            <textureradioofffocus>GoFullscreen.png</textureradioofffocus>
            <textureradiooffnofocus>GoFullscreen.png</textureradiooffnofocus>
            <visible>Player.HasMedia</visible>
        </control>
        <control type="button" id="612">
            <description>Go to playlist</description>
            <include>ButtonCommonValues</include>
            <label>13350</label>
            <onclick>$VAR[PlayList]</onclick>
            <visible>[Window.IsActive(Videos) + !String.IsEqual(Playlist.Length(video),0)] | [Window.IsActive(Music) + !String.IsEqual(Playlist.Length(music),0)]</visible>
        </control>
    </include>
    <include name="ScrollOffsetLabel">
        <control type="group">
            <depth>DepthSideBlade</depth>
            <visible>Container.Scrolling + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]</visible>
            <animation effect="slide" start="0,0" end="0,-90" time="75">Visible</animation>
            <animation effect="slide" start="0,-90" end="0,0" delay="300" time="75">Hidden</animation>
            <left>450r</left>
            <top>1080</top>
            <control type="image">
                <left>0</left>
                <top>0</top>
                <width>105</width>
                <height>98</height>
                <texture border="30,30,30,3">InfoMessagePanel.png</texture>
            </control>
            <control type="label">
                <left>8</left>
                <top>0</top>
                <width>98</width>
                <height>90</height>
                <align>center</align>
                <aligny>center</aligny>
                <label>$INFO[ListItem.SortLetter]</label>
                <textcolor>$VAR[ColorHighlightVar]</textcolor>
                <font>font30_title</font>
            </control>
        </control>
    </include>
    <include name="Clock">
        <control type="label">
            <description>time label</description>
            <right>30</right>
            <top>8</top>
            <width>300</width>
            <height>45</height>
            <align>right</align>
            <aligny>center</aligny>
            <font>font28_title</font>
            <textcolor>white</textcolor>
            <shadowcolor>black</shadowcolor>
            <label>$INFO[System.Time]</label>
            <animation effect="slide" start="0,0" end="-60,0" time="75" condition="Player.Muted">conditional</animation>
            <animation effect="fade" start="100" end="45" time="300" condition="!Control.HasFocus(9000)">conditional</animation>
        </control>
    </include>
    <include name="Animation.Common">
        <visible>!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) + !Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(DialogPVRRecordingInfo.xml) + !Window.IsVisible(DialogPVRGuideInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml)</visible>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
            <effect type="zoom" start="50" end="100" time="300" center="auto" tween="quadratic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out" />
            <effect type="zoom" end="75" start="100" time="200" center="auto" tween="quadratic" easing="in" />
        </animation>
        <animation type="Visible" reversible="false" condition="!Window.IsActive(skinsettings)">
            <effect type="fade" start="0" end="100" time="300" delay="300" tween="sine" easing="in" />
            <effect type="zoom" start="115" end="100" time="300" delay="300" center="auto" tween="sine" easing="out" />
        </animation>
    </include>
    <include name="backgroundfade">
        <animation effect="fade" time="450">Visible</animation>
        <animation effect="fade" time="450">Hidden</animation>
    </include>
    <include name="Window_OpenClose_Animation">
        <animation effect="fade" time="200">WindowOpen</animation>
        <animation effect="fade" time="200">WindowClose</animation>
    </include>
    <include name="Window_OpenClose_Animation_Slide">
        <animation effect="slide" start="1920,0" end="0,0" delay="0" time="300">WindowOpen</animation>
        <animation effect="slide" start="0,0" end="1920,0" delay="0" time="300">WindowClose</animation>
    </include>
    <include name="HomeMainMenuAdjust">
        <animation effect="Slide" start="0,0" end="0,60" time="0" condition="String.IsEqual(Container(9000).NumItems,6)">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,120" time="0" condition="String.IsEqual(Container(9000).NumItems,5)">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,180" time="0" condition="String.IsEqual(Container(9000).NumItems,4)">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,240" time="0" condition="String.IsEqual(Container(9000).NumItems,3)">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,300" time="0" condition="String.IsEqual(Container(9000).NumItems,2)">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,360" time="0" condition="String.IsEqual(Container(9000).NumItems,1)">conditional</animation>
    </include>
    <include name="HomeSubMenusAdjust">
        <animation effect="Slide" start="0,0" end="0,30" time="0" condition="[Control.HasFocus(9901) + String.IsEqual(Container(9901).NumItems,7)] | [Control.HasFocus(9902) + String.IsEqual(Container(9902).NumItems,7)] | [Control.HasFocus(9903) + String.IsEqual(Container(9903).NumItems,7)] | [Control.HasFocus(9904) + String.IsEqual(Container(9904).NumItems,7)]">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,60" time="0" condition="[Control.HasFocus(9901) + String.IsEqual(Container(9901).NumItems,6)] | [Control.HasFocus(9902) + String.IsEqual(Container(9902).NumItems,6)] | [Control.HasFocus(9903) + String.IsEqual(Container(9903).NumItems,6)] | [Control.HasFocus(9904) + String.IsEqual(Container(9904).NumItems,6)]">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,90" time="0" condition="[Control.HasFocus(9901) + String.IsEqual(Container(9901).NumItems,5)] | [Control.HasFocus(9902) + String.IsEqual(Container(9902).NumItems,5)] | [Control.HasFocus(9903) + String.IsEqual(Container(9903).NumItems,5)] | [Control.HasFocus(9904) + String.IsEqual(Container(9904).NumItems,5)]">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,120" time="0" condition="[Control.HasFocus(9901) + String.IsEqual(Container(9901).NumItems,4)] | [Control.HasFocus(9902) + String.IsEqual(Container(9902).NumItems,4)] | [Control.HasFocus(9903) + String.IsEqual(Container(9903).NumItems,4)] | [Control.HasFocus(9904) + String.IsEqual(Container(9904).NumItems,4)]">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,150" time="0" condition="[Control.HasFocus(9901) + String.IsEqual(Container(9901).NumItems,3)] | [Control.HasFocus(9902) + String.IsEqual(Container(9902).NumItems,3)] | [Control.HasFocus(9903) + String.IsEqual(Container(9903).NumItems,3)] | [Control.HasFocus(9904) + String.IsEqual(Container(9904).NumItems,3)]">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,180" time="0" condition="[Control.HasFocus(9901) + String.IsEqual(Container(9901).NumItems,2)] | [Control.HasFocus(9902) + String.IsEqual(Container(9902).NumItems,2)] | [Control.HasFocus(9903) + String.IsEqual(Container(9903).NumItems,2)] | [Control.HasFocus(9904) + String.IsEqual(Container(9904).NumItems,2)]">conditional</animation>
        <animation effect="Slide" start="0,0" end="0,210" time="0" condition="[Control.HasFocus(9901) + String.IsEqual(Container(9901).NumItems,1)] | [Control.HasFocus(9902) + String.IsEqual(Container(9902).NumItems,1)] | [Control.HasFocus(9903) + String.IsEqual(Container(9903).NumItems,1)] | [Control.HasFocus(9904) + String.IsEqual(Container(9904).NumItems,1)]">conditional</animation>
    </include>
    <include name="Floor_Animation">
        <animation effect="slide" start="0,120" end="0,0" time="300" condition="Window.Previous(Home)">WindowOpen</animation>
        <animation effect="slide" start="0,0" end="0,120" time="300" condition="Window.Next(Home)">WindowClose</animation>
    </include>
    <include name="dialogeffect">
        <depth>DepthDialog</depth>
        <animation effect="fade" time="200">WindowOpen</animation>
        <animation effect="fade" time="200">WindowClose</animation>
    </include>
    <include name="VisibleFadeEffect">
        <animation effect="fade" time="225">Visible</animation>
        <animation effect="fade" time="225">Hidden</animation>
    </include>
    <include name="KeyboardButton">
        <width>75</width>
        <height>75</height>
        <texturenofocus border="4">KeyboardKeyNF.png</texturenofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlightVar]" border="8">KeyboardKey.png</texturefocus>
        <align>center</align>
        <aligny>center</aligny>
        <font>font13</font>
        <focusedcolor>black</focusedcolor>
    </include>
    <include name="CommonWindowHeader">
        <param name="Icon" default="icon_home" />
        <param name="ShowLabel2" default="False" />
        <definition>
            <control type="group">
                <depth>DepthHeader</depth>
                <control type="image">
                    <description>Section header image</description>
                    <left>30</left>
                    <top>4</top>
                    <width>52</width>
                    <height>52</height>
                    <aspectratio>keep</aspectratio>
                    <texture>$PARAM[Icon].png</texture>
                </control>
                <control type="grouplist">
                    <left>98</left>
                    <top>8</top>
                    <width>1500</width>
                    <height>45</height>
                    <orientation>horizontal</orientation>
                    <align>left</align>
                    <itemgap>8</itemgap>
                    <control type="label">
                        <include>WindowTitleCommons</include>
                        <label>$PARAM[Label]</label>
                    </control>
                    <control type="label">
                        <include>WindowTitleCommons</include>
                        <label>[COLOR=$VAR[ColorHighlightVar]] - [/COLOR]$INFO[Container.FolderName]</label>
                        <visible>!String.IsEmpty(Container.FolderName)</visible>
                    </control>
                    <control type="label">
                        <include>WindowTitleCommons</include>
                        <label>[COLOR=$VAR[ColorHighlightVar]] - [/COLOR]$INFO[Control.GetLabel(2)]</label>
                        <visible>$PARAM[ShowLabel2]</visible>
                    </control>
                </control>
                <include>Clock</include>
            </control>
        </definition>
    </include>
    <include name="BackgroundDimensions">
        <width>1920</width>
        <height>1080</height>
        <animation effect="zoom" center="auto" end="101,101" time="0" condition="Integer.IsGreater(System.StereoscopicMode,0)">conditional</animation>
    </include>
    <include name="MusicInfoArtistInfo">
        <item>
            <label>$LOCALIZE[21893]:</label>
            <label2>$INFO[ListItem.Property(Artist_Born)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_Born))</visible>
        </item>
        <item>
            <label>$LOCALIZE[21894]:</label>
            <label2>$INFO[ListItem.Property(Artist_Formed)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_Formed))</visible>
        </item>
        <item>
            <label>$LOCALIZE[515]:</label>
            <label2>$INFO[ListItem.Genre]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Genre)</visible>
        </item>
        <item>
            <label>$LOCALIZE[175]:</label>
            <label2>$INFO[ListItem.Property(Artist_Mood)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_Mood))</visible>
        </item>
        <item>
            <label>$LOCALIZE[176]:</label>
            <label2>$INFO[ListItem.Property(Artist_Style)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_Style))</visible>
        </item>
        <item>
            <label>$LOCALIZE[21892]:</label>
            <label2>$INFO[ListItem.Property(Artist_Instrument)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_Instrument))</visible>
        </item>
        <item>
            <label>$LOCALIZE[21897]:</label>
            <label2>$INFO[ListItem.Property(Artist_Died)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_Died))</visible>
        </item>
        <item>
            <label>$LOCALIZE[21896]:</label>
            <label2>$INFO[ListItem.Property(Artist_Disbanded)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_Disbanded))</visible>
        </item>
        <item>
            <label>$LOCALIZE[21898]:</label>
            <label2>$INFO[ListItem.Property(Artist_YearsActive)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Artist_YearsActive))</visible>
        </item>
    </include>
    <include name="MusicInfoAlbumInfo">
        <item>
            <label>$LOCALIZE[557]:</label>
            <label2>$INFO[ListItem.Artist]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Artist)</visible>
        </item>
        <item>
            <label>$LOCALIZE[515]:</label>
            <label2>$INFO[ListItem.Genre]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Genre)</visible>
        </item>
        <item>
            <label>$LOCALIZE[563]:</label>
            <label2>$INFO[ListItem.RatingAndVotes]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.RatingAndVotes)</visible>
        </item>
        <item>
            <label>$LOCALIZE[38018]:</label>
            <label2>$INFO[ListItem.Userrating]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Userrating)</visible>
        </item>
        <item>
            <label>$LOCALIZE[175]:</label>
            <label2>$INFO[ListItem.Property(Album_Mood)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Album_Mood))</visible>
        </item>
        <item>
            <label>$LOCALIZE[176]:</label>
            <label2>$INFO[ListItem.Property(Album_Style)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Album_Style))</visible>
        </item>
        <item>
            <label>$LOCALIZE[21895]:</label>
            <label2>$INFO[ListItem.Property(Album_Theme)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Album_Theme))</visible>
        </item>
        <item>
            <label>146</label>
            <label2>$INFO[ListItem.Property(Album_Type)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Album_Type))</visible>
        </item>
        <item>
            <label>$LOCALIZE[21899]:</label>
            <label2>$INFO[ListItem.Property(Album_Label)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Album_Label))</visible>
        </item>
        <item>
            <label>$LOCALIZE[562]:</label>
            <label2>$INFO[ListItem.Year]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Year)</visible>
        </item>
    </include>
    <include name="MusicInfoSongInfo">
        <item>
            <label>$LOCALIZE[557]:</label>
            <label2>$INFO[ListItem.Artist]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Artist)</visible>
        </item>
        <item>
            <label>$LOCALIZE[558]:</label>
            <label2>$INFO[ListItem.Album]$INFO[listitem.discnumber, - $LOCALIZE[427] ]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Album)</visible>
        </item>
        <item>
            <label>$LOCALIZE[515]:</label>
            <label2>$INFO[ListItem.Genre]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Genre)</visible>
        </item>
        <item>
            <label>$LOCALIZE[175]:</label>
            <label2>$INFO[ListItem.Mood]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Mood)</visible>
        </item>
        <item>
            <label>$LOCALIZE[562]:</label>
            <label2>$INFO[ListItem.Year]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Year)</visible>
        </item>
        <item>
            <label>$LOCALIZE[554]:</label>
            <label2>$INFO[ListItem.TrackNumber]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.TrackNumber)</visible>
        </item>
        <item>
            <label>$LOCALIZE[563]:</label>
            <label2>$INFO[ListItem.RatingAndVotes]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.RatingAndVotes)</visible>
        </item>
        <item>
            <label>$LOCALIZE[38018]:</label>
            <label2>$INFO[ListItem.Userrating]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Userrating)</visible>
        </item>
        <item>
            <label>$LOCALIZE[29903]:</label>
            <label2>$INFO[ListItem.Property(Role.Composer)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Composer))</visible>
        </item>
        <item>
            <label>$LOCALIZE[29905]:</label>
            <label2>$INFO[ListItem.Property(Role.Conductor)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Conductor))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38034]:</label>
            <label2>$INFO[ListItem.Property(Role.Orchestra)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Orchestra))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38035]:</label>
            <label2>$INFO[ListItem.Property(Role.Lyricist)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Lyricist))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38036]:</label>
            <label2>$INFO[ListItem.Property(Role.Remixer)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Remixer))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38037]:</label>
            <label2>$INFO[ListItem.Property(Role.Arranger)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Arranger))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38038]:</label>
            <label2>$INFO[ListItem.Property(Role.Engineer)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Engineer))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38039]:</label>
            <label2>$INFO[ListItem.Property(Role.Producer)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Producer))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38040]:</label>
            <label2>$INFO[ListItem.Property(Role.DJMixer)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.DJMixer))</visible>
        </item>
        <item>
            <label>$LOCALIZE[38041]:</label>
            <label2>$INFO[ListItem.Property(Role.Mixer)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Property(Role.Mixer))</visible>
        </item>
    </include>
    <include name="VideoInfoMovies">
        <item>
            <label>$LOCALIZE[21800]:</label>
            <label2>$INFO[ListItem.Filename]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Filename)</visible>
        </item>
        <item>
            <label>$LOCALIZE[515]:</label>
            <label2>$INFO[ListItem.Genre]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Genre)</visible>
        </item>
        <item>
            <label>$LOCALIZE[2050]:</label>
            <label2>$INFO[ListItem.Duration] $LOCALIZE[12391]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Duration)</visible>
        </item>
        <item>
            <label>$LOCALIZE[563]:</label>
            <label2>$INFO[ListItem.RatingAndVotes]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.RatingAndVotes)</visible>
        </item>
        <item>
            <label>MPAA:</label>
            <label2>$INFO[ListItem.Mpaa]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Mpaa) + [!String.Contains(ListItem.Mpaa,Rated G) + !String.Contains(ListItem.Mpaa,Rated PG-13) + !String.Contains(ListItem.Mpaa,Rated PG) + !String.Contains(ListItem.Mpaa,Rated R) + !String.Contains(ListItem.Mpaa,Rated NC) + !String.Contains(ListItem.Mpaa,US:not rated) + !String.Contains(ListItem.Mpaa,FSK )]</visible>
        </item>
        <item>
            <label>$LOCALIZE[20376]:</label>
            <label2>$INFO[ListItem.OriginalTitle]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.OriginalTitle) + !String.IsEqual(ListItem.OriginalTitle,Listitem.Title)</visible>
        </item>
        <item>
            <label>$LOCALIZE[20339]:</label>
            <label2>$INFO[ListItem.Director]</label2>
            <onclick>SendClick(2003,13)</onclick>
            <visible>!String.IsEmpty(ListItem.Director)</visible>
        </item>
        <item>
            <label>$LOCALIZE[20417]:</label>
            <label2>$INFO[ListItem.Writer]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Writer)</visible>
        </item>
        <item>
            <label>$LOCALIZE[15311]</label>
            <label2>$INFO[ListItem.FilenameAndPath]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.FilenameAndPath)</visible>
        </item>
        <item>
            <label>$LOCALIZE[31322]:</label>
            <label2>$INFO[ListItem.Premiered]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Premiered)</visible>
        </item>
        <item>
            <label>Budget:</label>
            <label2>$INFO[Window(Home).Property(SkinHelper.ListItem.Budget.formatted),$,]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Budget.formatted))</visible>
        </item>
        <item>
            <label>Box Office:</label>
            <label2>$INFO[Window(Home).Property(SkinHelper.ListItem.BoxOffice)]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.BoxOffice))</visible>
        </item>
    </include>
    <include name="VideoInfoTVShows">
        <item>
            <label>$LOCALIZE[20360]:</label>
            <label2>$INFO[listitem.episode] [COLOR=grey] ($INFO[ListItem.Property(WatchedEpisodes),, $LOCALIZE[16102]])[/COLOR]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Episode)</visible>
        </item>
        <item>
            <label>$LOCALIZE[31322]:</label>
            <label2>$INFO[ListItem.Premiered]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Premiered)</visible>
        </item>
        <item>
            <label>$LOCALIZE[515]:</label>
            <label2>$INFO[ListItem.Genre]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Genre)</visible>
        </item>
        <item>
            <label>$LOCALIZE[563]:</label>
            <label2>$INFO[ListItem.RatingAndVotes]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.RatingAndVotes)</visible>
        </item>
        <item>
            <label>$LOCALIZE[15311]</label>
            <label2>$INFO[ListItem.FilenameAndPath]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.FilenameAndPath)</visible>
        </item>
        <item>
            <label>Status:</label>
            <label2>$INFO[Window(Home).Property(SkinHelper.ListItem.Status)]</label2>
            <onclick>noop</onclick>
        </item>
    </include>
    <include name="VideoInfoEpisodes">
        <item>
            <label>$LOCALIZE[20359]:</label>
            <label2>$INFO[ListItem.Season] x $INFO[ListItem.Episode]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Episode)</visible>
        </item>
        <item>
            <label>$LOCALIZE[31322]:</label>
            <label2>$INFO[ListItem.Premiered]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Premiered)</visible>
        </item>
        <item>
            <label>$LOCALIZE[515]:</label>
            <label2>$INFO[ListItem.Genre]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Genre)</visible>
        </item>
        <item>
            <label>$LOCALIZE[2050]:</label>
            <label2>$INFO[ListItem.Duration] $LOCALIZE[12391]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Duration)</visible>
        </item>
        <item>
            <label>$LOCALIZE[563]:</label>
            <label2>$INFO[ListItem.RatingAndVotes]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.RatingAndVotes)</visible>
        </item>
        <item>
            <label>$LOCALIZE[20339]:</label>
            <label2>$INFO[ListItem.Director]</label2>
            <onclick>SendClick(2003,13)</onclick>
            <visible>!String.IsEmpty(ListItem.Director)</visible>
        </item>
        <item>
            <label>$LOCALIZE[20417]:</label>
            <label2>$INFO[ListItem.Writer]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.Writer)</visible>
        </item>
        <item>
            <label>$LOCALIZE[15311]</label>
            <label2>$INFO[ListItem.FilenameAndPath]</label2>
            <onclick>noop</onclick>
            <visible>!String.IsEmpty(ListItem.FilenameAndPath)</visible>
        </item>
    </include>
    <include name="DimForContextMenu">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <include>BackgroundDimensions</include>
            <texture>black-back.png</texture>
            <animation effect="fade" time="225">Visible</animation>
            <animation effect="fade" time="225">Hidden</animation>
            <visible>Window.IsActive(ContextMenu)</visible>
        </control>
    </include>
    <include name="ScrollBarPosition">
        <animation effect="slide" end="$PARAM[scrollbarslide],0" time="0" condition="String.IsEqual(Skin.String(ContentPanelOpacity.label),0) | String.IsEqual(Skin.String(ContentPanelOpacity.label),5) | String.IsEqual(Skin.String(ContentPanelOpacity.label),10) | String.IsEqual(Skin.String(ContentPanelOpacity.label),15) | String.IsEqual(Skin.String(ContentPanelOpacity.label),20) | String.IsEqual(Skin.String(ContentPanelOpacity.label),25) | String.IsEqual(Skin.String(ContentPanelOpacity.label),30)">Conditional</animation>
    </include>
    <include name="NoFloorSlide">
        <animation effect="slide" end="0,$PARAM[contentslide]" time="0" condition="Skin.HasSetting(HideFloor)">Conditional</animation>
    </include>
    <include name="UnselectFade">
        <animation effect="fade" start="100" end="30" time="0" condition="!Control.HasFocus($PARAM[id])">Conditional</animation>
    </include>
    <include name="BehindDialogFadeOut">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <width>1920</width>
            <height>1080</height>
            <texture>black-back.png</texture>
            <animation effect="fade" time="300">Visible</animation>
            <animation effect="fade" time="150">Hidden</animation>
            <visible>Window.IsActive(MovieInformation) | Window.IsActive(MusicInformation) | Window.IsActive(SongInformation) | Window.IsActive(FileBrowser) | Window.IsActive(TextViewer) | Window.IsActive(AddonSettings) | Window.IsActive(ContentSettings) | Window.IsActive(SelectDialog) | Window.IsActive(MediaSource) | Window.IsActive(PictureInfo) | Window.IsActive(PlayerControls) | Window.IsActive(VirtualKeyboard) | Window.IsActive(NumericInput) | Window.IsActive(ProfileSettings) | Window.IsActive(LockSettings) | Window.IsActive(SmartPlaylistEditor) | Window.IsActive(SmartPlaylistRule) | Window.IsActive(script-RSS_Editor-rssEditor.xml) | Window.IsActive(script-RSS_Editor-setEditor.xml) | Window.IsActive(AddonInformation) | Window.IsActive(PeripheralSettings) | Window.IsActive(script-cu-lrclyrics-main.xml) | Window.IsActive(MediaFilter) | Window.IsActive(Favourites) | Window.IsActive(script-globalsearch-infodialog.xml) | Window.IsActive(Contextmenu)</visible>
        </control>
    </include>
    <include name="WidgetPositionReset">
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onleft>
        <onleft>$PARAM[onleft]</onleft>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onup>
        <onup>$PARAM[onup]</onup>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</ondown>
        <ondown>$PARAM[ondown]</ondown>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback condition="!Integer.IsEqual(Container($PARAM[widgetid]).Position,0) | Container($PARAM[widgetid]).HasPrevious">PageUp</onback>
        <onback>$PARAM[onback]</onback>
    </include>
    <include name="SelectedOutlineVar">
        <control type="image">
            <width>$PARAM[width]</width>
            <height>$PARAM[height]</height>
            <texture colordiffuse="$VAR[ColorHighlightVar]" border="8">common/selectbox.png</texture>
        </control>
        <control type="image">
            <visible>Skin.HasSetting(UseGradients)</visible>
            <width>$PARAM[width]</width>
            <height>$PARAM[height]</height>
            <texture colordiffuse="$VAR[GradientColorHighlightVar]" border="8">common/gradient-diffuse-selectbox.png</texture>
        </control>
    </include>
    <include name="SelectedSolidVar">
        <control type="image">
            <width>$PARAM[width]</width>
            <height>$PARAM[height]</height>
            <texture colordiffuse="$VAR[ColorHighlightVar]" border="8">MenuItemFO.png</texture>
        </control>
        <control type="image">
            <visible>Skin.HasSetting(UseGradients)</visible>
            <width>$PARAM[width]</width>
            <height>$PARAM[height]</height>
            <texture colordiffuse="$VAR[GradientColorHighlightVar]" border="8">common/gradient-diffuse-horizontal.png</texture>
        </control>
    </include>
    <include name="SettingsFocusGradientSolidHack">
        <control type="image">
            <visible>Skin.HasSetting(UseGradients)</visible>
            <top>$PARAM[top]</top>
            <left>$PARAM[left]</left>
            <width>$PARAM[width]</width>
            <height>$PARAM[height]</height>
            <right>0</right>
            <texture colordiffuse="$VAR[GradientColorHighlightVar]">common/gradient-diffuse-horizontal.png</texture>
            <visible>ControlGroup($PARAM[id]).HasFocus()</visible>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,0)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,1)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,2)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,3)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,4)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,5)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,6)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,7)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,8)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,9)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,10)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,11)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,12)">Conditional</animation>
            <animation effect="slide" end="0,$PARAM[slide]" condition="Integer.IsGreater(Container($PARAM[id]).Position,13)">Conditional</animation>
        </control>
    </include>
</includes>
